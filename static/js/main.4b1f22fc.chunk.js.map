{"version":3,"sources":["components/header.module.css","components/moviesPage.module.css","components/cast.module.css","components/homePage.module.css","constants.js","components/HomePage.js","components/Cast.js","components/Reviews.js","components/MovieDetailsPage.js","components/Header.js","components/MoviesPage.js","App.js","index.js","components/movieDetailsPage.module.css"],"names":["module","exports","themoviedbApiKey","themoviedbBaseUrl","HomePage","useState","moviesList","setMoviesList","useEffect","queryParamsString","queryString","stringify","api_key","axios","then","response","data","results","className","classes","home_page","map","item","kay","id","to","title","Cast","movieId","useParams","castData","setCastData","cast","person","profile_path","no_image","src","alt","name","character","Reviews","reviewsData","setReviewsData","length","style","whiteSpace","author","content","MovieDetailsPage","navigate","useNavigate","movieData","setMovieData","movies_page","onClick","movie","poster_path","original_title","info","Math","round","vote_average","overview","genres","additional","path","element","replace","Header","props","header","isActive","link","active_link","MoviesPage","searchText","setSearchText","searchbar","search_form","onSubmit","event","preventDefault","query","type","search_form_button","search_form_button_label","value","onChange","currentTarget","search_form_input","autoComplete","autoFocus","placeholder","App","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.4b1f22fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1ZLYr\",\"link\":\"header_link__1JgdF\",\"active_link\":\"header_active_link__1ab22\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchbar\":\"moviesPage_searchbar__3RulL\",\"search_form\":\"moviesPage_search_form__15bZL\",\"search_form_button\":\"moviesPage_search_form_button__3G-HE\",\"search_form_button_label\":\"moviesPage_search_form_button_label__2Q2SC\",\"search_form_input\":\"moviesPage_search_form_input__1yTTA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"person\":\"cast_person__2J8MN\",\"no_image\":\"cast_no_image__2IRiF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home_page\":\"homePage_home_page__gfsFR\"};","\r\nexport const themoviedbApiKey = 'e6e1751f76075bd6037a4ce230a095c1';\r\nexport const themoviedbBaseUrl = 'https://api.themoviedb.org/3';","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { themoviedbApiKey, themoviedbBaseUrl } from '../constants';\r\nimport queryString from 'query-string';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport classes from './homePage.module.css'\r\n\r\nexport const HomePage = () => {\r\n\r\n    const [moviesList, setMoviesList] = useState([]);\r\n\r\n    useEffect(() => {\r\n\r\n        const queryParamsString = queryString.stringify({\r\n            api_key: themoviedbApiKey,\r\n        })\r\n\r\n        axios(`${themoviedbBaseUrl}/trending/movie/day?${queryParamsString}`)\r\n            .then(response => {\r\n                setMoviesList(response.data.results);\r\n            });\r\n     }, []);\r\n\r\n    return (\r\n        <div className={classes.home_page}>\r\n            <h1>Trending today</h1>\r\n            <ul>\r\n                {\r\n                    moviesList.map(item => (\r\n                        <li kay={item.id}>\r\n                            <Link key={item.id} to={`/movies/${item.id}`}>{item.title}</Link>\r\n                        </li>\r\n                    ))\r\n                }\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport queryString from 'query-string';\r\nimport { themoviedbApiKey, themoviedbBaseUrl } from '../constants';\r\n\r\nimport classes from './cast.module.css'\r\n\r\nexport const Cast = () => {\r\n    const {movieId} = useParams();\r\n\r\n    const [castData, setCastData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const queryParamsString = queryString.stringify({\r\n            api_key: themoviedbApiKey\r\n        });\r\n\r\n        axios(`${themoviedbBaseUrl}/movie/${movieId}/credits?${queryParamsString}`)\r\n            .then(response => {\r\n                setCastData(response.data);\r\n        })\r\n    },[movieId])\r\n\r\n    if (castData === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {castData.cast.map(item => (\r\n                <div className={classes.person} key={item.id}>\r\n                    {item.profile_path === null ? (\r\n                        <div className={classes.no_image}>No photo</div>\r\n                    ): (\r\n                        <img src={`https://image.tmdb.org/t/p/original${item.profile_path}`} alt={item.name}/>\r\n                    )}\r\n                    <p>{item.name}</p>\r\n                    <p>Character: {item.character}</p>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams } from 'react-router';\r\nimport queryString from 'query-string';\r\nimport { themoviedbApiKey, themoviedbBaseUrl } from '../constants';\r\n\r\n\r\nexport const Reviews = () => {\r\n\r\n    const {movieId} = useParams();\r\n\r\n    const [reviewsData, setReviewsData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const queryParamsString = queryString.stringify({\r\n            api_key: themoviedbApiKey\r\n        });\r\n\r\n        axios(`${themoviedbBaseUrl}/movie/${movieId}/reviews?${queryParamsString}`)\r\n            .then(response => {\r\n                setReviewsData(response.data.results);\r\n        })\r\n    },[movieId])\r\n\r\n    if (reviewsData === null) {\r\n        return null;\r\n    } else if (reviewsData.length === 0) {\r\n        return (\r\n            <p>We dont have any reviews for this movie</p>\r\n        )\r\n    } else {\r\n        return (\r\n            <div style={{ whiteSpace: 'pre-wrap' }}>\r\n                <ul>\r\n                    {reviewsData.map(item => (\r\n                        <li key={item.id}>\r\n                            <h3>{item.author}</h3>\r\n                            <p>{item.content}</p>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import queryString from 'query-string';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate , Link, Route, Routes, Navigate } from 'react-router-dom';\r\n\r\nimport { Cast } from './Cast';\r\nimport { Reviews } from './Reviews';\r\n\r\nimport { themoviedbApiKey, themoviedbBaseUrl } from '../constants';\r\n\r\nimport classes from './movieDetailsPage.module.css'\r\n\r\nexport const MovieDetailsPage = () => {\r\n\r\n    const { movieId } = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [movieData, setMovieData] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        const queryParamsString = queryString.stringify({\r\n            api_key: themoviedbApiKey\r\n        });\r\n\r\n        axios(`${themoviedbBaseUrl}/movie/${movieId}?${queryParamsString}`)\r\n            .then(response => {\r\n                setMovieData(response.data);\r\n        })\r\n    },[movieId])\r\n\r\n    if (movieData === null) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.movies_page}>\r\n            <button onClick={() => navigate(-1)}>⇐ Go back</button>\r\n            <div className={classes.movie}>\r\n                <img\r\n                    src={`https://image.tmdb.org/t/p/original${movieData.poster_path}`}\r\n                    alt={movieData.original_title}\r\n                />\r\n\r\n                <div className={classes.info}>\r\n                    <h2>{movieData.title}</h2>\r\n                    <p>User score {Math.round(movieData.vote_average * 10)}%</p>\r\n                    <h3>Overview</h3>\r\n                    <p>{movieData.overview}</p>\r\n                    <h3>Genres</h3>\r\n                    <div className={classes.genres}>\r\n                        {movieData.genres.map(item => (\r\n                            <span key={item.id}>{item.name}</span>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={classes.additional}>\r\n                <h3>Adittional information</h3>\r\n                <ul>\r\n                    <li><Link to={`/movies/${movieId}/cast`}>Cast</Link></li>\r\n                    <li><Link to={`/movies/${movieId}/reviews`}>Reviews</Link></li>\r\n                </ul>\r\n            </div>\r\n            <Routes>\r\n                <Route path=\"/cast\" element={<Cast/>}/>\r\n                <Route path=\"/reviews\" element={<Reviews />} />\r\n                <Route path=\"/\"/>\r\n                <Route path=\"*\" element={<Navigate replace to={`/movies/${movieId}`}/>}/>\r\n            </Routes>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './header.module.css'\r\n\r\nexport const Header = props => {\r\n\r\n    return (\r\n        <header className={classes.header}>\r\n            <NavLink className={({isActive}) => classes.link + (isActive ? ' '+classes.active_link : '')} to=\"/\">Home</NavLink>\r\n            <NavLink className={({isActive}) => classes.link + (isActive ? ' '+classes.active_link : '')} to=\"/movies\">Movies</NavLink>\r\n        </header>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport axios from 'axios';\r\nimport { themoviedbApiKey, themoviedbBaseUrl } from '../constants';\r\nimport queryString from 'query-string';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport classes from './moviesPage.module.css';\r\n\r\nexport const MoviesPage = (props) => {\r\n\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const [moviesList, setMoviesList] = useState([]);\r\n\r\n  const handleChange = (event) => {\r\n    setSearchText(event.currentTarget.value)\r\n  }\r\n\r\n  const handleSubmite = (event) => {\r\n    event.preventDefault()\r\n\r\n    const queryParamsString = queryString.stringify({\r\n      api_key: themoviedbApiKey,\r\n      query: searchText,\r\n    });\r\n\r\n    axios(`${themoviedbBaseUrl}/search/movie?${queryParamsString}`)\r\n        .then(response => {\r\n            setMoviesList(response.data.results);\r\n    })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <header className={classes.searchbar}>\r\n        <form className={classes.search_form} onSubmit={handleSubmite}>\r\n          <button type=\"submit\" className={classes.search_form_button}>\r\n            🔎\r\n            <span className={classes.search_form_button_label}>Search</span>\r\n          </button>\r\n          <input\r\n            value={searchText}\r\n            onChange={handleChange}\r\n            className={classes.search_form_input}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search movies\"\r\n          />\r\n        </form>\r\n      </header>\r\n      <main>\r\n        <ul>\r\n          {\r\n              moviesList.map(item => (\r\n                <li kay={item.id}>\r\n                      <Link key={item.id} to={`/movies/${item.id}`}>{item.title}</Link>\r\n                  </li>\r\n              ))\r\n          }\r\n        </ul>\r\n      </main>\r\n      </>\r\n  )\r\n}\r\n","import './App.css';\nimport { Routes, Route, Navigate } from 'react-router-dom'\n\nimport { HomePage } from './components/HomePage';\nimport { MovieDetailsPage } from './components/MovieDetailsPage';\nimport { Header } from './components/Header';\nimport { MoviesPage } from './components/MoviesPage';\n\nconst App = () => {\n  return (\n    <>\n      <Header/> \n      <Routes>\n        <Route path=\"/\" element={<HomePage/>} />\n        <Route path=\"/movies/\" element={<MoviesPage />} />\n        <Route path=\"/movies/:movieId/*\" element={<MovieDetailsPage />} />\n        <Route path=\"*\" element={<Navigate replace to=\"/\"/>}/>\n      </Routes>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movies_page\":\"movieDetailsPage_movies_page__1j-LI\",\"movie\":\"movieDetailsPage_movie__2cuFT\",\"info\":\"movieDetailsPage_info__2cVWv\",\"genres\":\"movieDetailsPage_genres__27y0N\",\"additional\":\"movieDetailsPage_additional__3Br-w\"};"],"sourceRoot":""}